<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.1.xsd"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx">

    <import resource="security-config.xml"/>

    <context:property-placeholder location="classpath:META-INF/spring/application.properties"/>
    <context:component-scan base-package="com.github.jdubois.responses.service,com.github.jdubois.responses.security"/>

    <bean id="propertiesService" class="com.github.jdubois.responses.service.impl.PropertiesServiceImpl">
        <property name="siteUrl" value="${site.url}"/>
        <property name="staticContent" value="${static.content}"/>
        <property name="googleAnalytics" value="${google.analytics}"/>
    </bean>

    <tx:annotation-driven/>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- JPA annotations bean post processor -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <!-- Exception translation bean post processor -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

<!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${datasource.driverclassname}"/>
        <property name="url" value="${dataSource.url}"/>
        <property name="username" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
        <property name="maxActive" value="${dataSource.maxActive}"/>
        <property name="maxIdle" value="${dataSource.maxIdle}"/>
        <property name="maxWait" value="${dataSource.maxWait}"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="-1"/>
    </bean>-->

    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">

        <property name="driverClass" value="${datasource.driverclassname}"/>
        <property name="jdbcUrl" value="${dataSource.url}"/>
        <property name="user" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
        <property name="initialPoolSize" value="10"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="${dataSource.maxActive}"/>
        <property name="idleConnectionTestPeriod" value="600"/>
        <property name="acquireIncrement" value="2"/>
        <property name="maxStatements" value="300"/>
        <property name="numHelperThreads" value="10"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            </bean>
        </property>
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.search.default.directory_provider">${hibernate.search.default.directory_provider}
                </prop>
                <prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
                <prop key="hibernate.search.worker.execution">async</prop>
                <prop key="hibernate.search.worker.buffer_queue.max">1000</prop>
            </props>
        </property>
    </bean>

    <task:annotation-driven executor="singleThreadExecutor" scheduler="singleThreadScheduler"/>
    <task:executor id="singleThreadExecutor" pool-size="1"/>
    <task:scheduler id="singleThreadScheduler" pool-size="1"/>
    <task:scheduled-tasks scheduler="singleThreadScheduler">
        <task:scheduled ref="schedulerService" method="cleanupApplication" cron="0 0 5 ? * MON-FRI"/>
    </task:scheduled-tasks>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="defaultEncoding" value="${mail.encoding}"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
    </bean>

</beans>